/*
SPDX-FileCopyrightText: 2022-present Open Networking Foundation <info@opennetworking.org>

SPDX-License-Identifier: Apache-2.0
*/

syntax = "proto3";

package atomix.set.v1;

import "atomix/atom/v1/descriptor.proto";
import "atomix/atom/v1/atom.proto";
import "atomix/atom/meta/v1/headers.proto";
import "gogoproto/gogo.proto";

// SetManager is a manager for a Set primitive
service SetManager {
    option (atomix.atom.v1.primitive_type) = "Set";
    option (atomix.atom.v1.service_type) = MANAGER;

    rpc Create (CreateRequest) returns (CreateResponse) {
        option (atomix.atom.v1.operation_id) = 1;
        option (atomix.atom.v1.operation_type) = CREATE;
    }

    rpc Close (CloseRequest) returns (CloseResponse) {
        option (atomix.atom.v1.operation_id) = 2;
        option (atomix.atom.v1.operation_type) = CLOSE;
    }
}

message CreateRequest {
    atomix.atom.meta.v1.RequestHeaders headers = 1 [
        (atomix.atom.v1.headers) = true,
        (gogoproto.nullable) = false
    ];
    atomix.atom.v1.Cluster cluster = 2 [
        (gogoproto.nullable) = false
    ];
}

message CreateResponse {
    atomix.atom.meta.v1.ResponseHeaders headers = 1 [
        (atomix.atom.v1.headers) = true,
        (gogoproto.nullable) = false
    ];
}

message CloseRequest {
    atomix.atom.meta.v1.RequestHeaders headers = 1 [
        (atomix.atom.v1.headers) = true,
        (gogoproto.nullable) = false
    ];
    atomix.atom.v1.Cluster cluster = 2 [
        (gogoproto.nullable) = false
    ];
}

message CloseResponse {
    atomix.atom.meta.v1.ResponseHeaders headers = 1 [
        (atomix.atom.v1.headers) = true,
        (gogoproto.nullable) = false
    ];
}
